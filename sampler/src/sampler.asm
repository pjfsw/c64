
BasicUpstart2(programStart)
    *=$080e

programStart:
    sei
    jsr cleanup_ram

    lda #<sample
    sta sample_ptr
    lda #>sample
    sta sample_ptr+1
    ldy #0
!next_sample:
    lda (sample_ptr),y // 5
    tax                // 2
    and #15            // 2
    sta $d418          // 4

    .for (var i = 0; i < 3; i++) {
        nop
    }

    iny
    bne delay_a
    inc sample_ptr+1  // 6
    lda #$cf          // 2
    cmp sample_ptr+1  // 4

    bne !next_sample- // 3
    lda #<sample      // 2
    sta sample_ptr    // 3
    lda #>sample      // 2
    sta sample_ptr+1  // 3
!:
    jmp !next_sample-  // 3

delay_a:
    .for (var i = 0; i < 17; i++) {
        nop
    }
    jmp !next_sample- // 3

    rts

cleanup_ram:
    lda #$7f
    sta $dc0d  //disable timer interrupts which can be generated by the two CIA chips
    sta $dd0d  //the kernal uses such an interrupt to flash the cursor and scan the keyboard, so we better
               //stop it.

    lda $dc0d  //by reading this two registers we negate any pending CIA irqs.
    lda $dd0d  //if we don't do this, a pending CIA irq might occur after we finish setting up our irq.
               //we don't want that to happen.

    lda #$35   //we turn off the BASIC and KERNAL rom here
    sta $01    //the cpu now sees RAM everywhere except at $d000-$e000, where still the registers of
               //SID/VICII/etc are visible

    lda #<irq  //this is how we set up
    sta $fffe  //the address of our interrupt code
    lda #>irq
    sta $ffff

    lda #<nmi
    sta $fffa
    lda #>nmi
    sta $fffb

    rts

    .function scale_sample(sample) {
        .return sample >> 4;
    }

irq:
nmi:
    rti

// ffmpeg -i Dental_Approval_Remixed2.mp3 -f u8 -acodec pcm_u8 -fs 65536 -ac 1 -ar 14700 usample2.raw
    .const sample_data = LoadBinary("usample2.raw")
sample:
    .var len = $d000-*
    .for (var i = 0; i < len; i++) {
        //.byte scale_sample(sample_data.uget(i*2)) | (scale_sample(sample_data.uget(i*2+1)) << 4)
        .byte scale_sample(sample_data.uget(i))
    }

*=$02 "Zeropage" virtual
.zp {
    sample_ptr: .word 0
}